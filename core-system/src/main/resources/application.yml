micronaut:
  application:
    name: coreSystem
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JET_SIGNATURE_SECRET:ThisSecretLengthMustBeAtLeast256Bits}"'
              jws-algorithm: HS256
        generator:
          access-token:
            expiration: 604800
    intercept-url-map:
      - access: isAnonymous()
        pattern: /swagger/**
      - access: isAnonymous()
        pattern: /swagger-ui/**
    enabled: true
    endpoints:
      login:
        enabled: true
        path: "/api/login"
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  server:
    cors:
      enabled: true
      single-header: true
    netty:
      access-logger:
        enabled: true
datasources:
  default:
    driverClassName: org.postgresql.Driver
    db-type: postgresql
    jdbc-url: "${POSTGRES_URL}"
    username: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
netty:
  default:
    allocator:
      max-order: 3
jackson:
  serialization:
    writeDatesAsTimestamps: false
aws:
  accessKeyId: "${AWS_ACCESS_KEY_ID:developAccessKeyId}"
  secretAccessKey: "${AWS_SECRET_ACCESS_KEY:developSecretAccessKey}"
  dynamoDB:
    endpoint: "${AWS_DYNAMODB_ENDPOINT}"
  sqs:
    endpoint: "${AWS_SQS_ENDPOINT}"

